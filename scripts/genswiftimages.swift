import Foundation
import Utility

func main() {
	var inputPath: String!
	var outputPath: String!

	let arguments = Array(CommandLine.arguments.dropFirst())

	let parser = ArgumentParser(
		usage: "genswiftimages --in <xcassets path> --out <swift output file path>"
	, 	overview: "This tool generates UIImages's from .xcasset images"
	)

	let inOpt = parser.add(option: "--in", shortName: nil, kind: String.self, usage: "path to xcassets", completion: nil)
	let outOpt = parser.add(option: "--out", shortName: nil, kind: String.self, usage: "path to output swift source file", completion: nil)

	do {
		let result = try parser.parse(arguments)
		inputPath = result.get(inOpt)
		outputPath = result.get(outOpt)
	} catch {
		print("error: \(error)")
		return
	}

	autogeneratedLine()
	line("import UIKit")
	line()
	line("extension UIImage {")
	line()
	findFolders(extension: ["imageset"], in: inputPath).sorted { $0.lastPathComponent < $1.lastPathComponent }.forEach {
		image($0)
	}
	line("}")
	output(to: outputPath)
}

func image(_ url: Foundation.URL) {
	let color = url.deletingPathExtension().lastPathComponent
	if color.isValidSwiftString() {
		outputString.addLine("\tstatic var \(color): UIImage { return UIImage(named: #function)! }")
	}
}

main()
