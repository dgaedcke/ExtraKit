#!/usr/bin/env xcrun --sdk macosx swift

// genswift --xcassets ./ --colors-src Colors.swift

import Foundation

var tabs = 0

let outputPath = CommandLine.arguments[1]

extension String {
	mutating func addLine(_ line: String = "") {
		
		if line.suffix(1) == "}" {
			tabs -= 1
		}
		if tabs > 0 {
			self += String(repeating: "\t", count: tabs)
		}

		self += "\(line)\n"

		if line.suffix(1) == "{" {
			tabs += 1
		}
	}

	func uncapitalized() -> String {
		return replacingCharacters(in: startIndex..<index(startIndex, offsetBy:1), with: self[startIndex...startIndex].lowercased())
	}
}

func generateColor(_ color: String) {
	let color = color.components(separatedBy: "/").last!.components(separatedBy: ".").first!
	outputString.addLine("\tstatic var \(color): UIColor { return UIColor(named: #function)! }")
}
var outputString = ""

outputString.addLine("""
// autogenerated by genswiftstoryboards.swift

import UIKit
""")

outputString += """
/**
	Generated from the named color assets used by the app.
*/

"""
outputString.addLine("extension UIColor {")
outputString.addLine("")
CommandLine.arguments[3..<CommandLine.arguments.count].sorted { $0 < $1 }.forEach {
	generateColor($0)
}
outputString.addLine("}")

try? outputString.write(toFile:outputPath, atomically: true, encoding: String.Encoding.utf8)
